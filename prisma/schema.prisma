// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model site_user {
  id                  String                @id @default(uuid())
  email               String                @unique
  phone_number        String                @unique
  password            String
  user_address        user_address[]
  shopping_carts      shopping_cart[]
  shop_order          shop_order[]
  user_payment_method user_payment_method[]
  user_review         user_review[]
}

model address {
  id             String         @id @default(uuid())
  unit_number    Int
  street_number  Int
  address_line_1 String
  address_line_2 String
  city           String
  postal_code    String
  country        country        @relation(fields: [country_id], references: [id])
  country_id     String
  user_address   user_address[]
  shop_order     shop_order[]
}

model country {
  id           String    @id @default(uuid())
  country_name String
  address      address[]
}

model user_address {
  user       site_user @relation(fields: [user_id], references: [id])
  user_id    String
  address    address   @relation(fields: [address_id], references: [id])
  address_id String    @id
  is_default Boolean   @default(false)
}

model user_payment_method {
  id              String       @id @default(uuid())
  user            site_user    @relation(fields: [user_id], references: [id])
  user_id         String
  payment         payment_type @relation(fields: [payment_type_id], references: [id])
  payment_type_id String
  provider        provider
  account_number  String
  expiry_date     DateTime
  is_default      Boolean      @default(false)
  shop_order      shop_order[]
}

model payment_type {
  id                  String                @id @default(uuid())
  value               payment_method
  user_payment_method user_payment_method[]
}

enum payment_method {
  CREDIT_CARD
  PAYPAL
  GOOGLE_PAY
  APPLE_PAY
}

enum provider {
  MASTERCARD
  VISA
}

model product {
  id                 String               @id @default(uuid())
  name               String
  description        String
  category           product_category     @relation(fields: [category_id], references: [id])
  category_id        String
  collections        product_collection[]
  product_items      product_item[]
  product_image      String
  product_promotions promotion_product[]
}

model collection {
  id       String               @id @default(uuid())
  name     String
  products product_collection[]
}

model product_collection {
  product      product    @relation(fields: [productId], references: [id])
  productId    String
  collection   collection @relation(fields: [collectionId], references: [id])
  collectionId String

  @@id([collectionId, productId])
}

model product_item {
  id                     String                  @id @default(uuid())
  product                product                 @relation(fields: [product_id], references: [id])
  product_id             String
  SKU                    String
  qty_in_stock           Int
  price                  Int
  product_configurations product_configuration[]
  product_images         String[]
  shopping_cart_items    shopping_cart_item[]
  order_lines            order_line[]
}

model product_category {
  id                 String             @id @default(uuid())
  parent_category_id String?
  category_name      String
  products           product[]
  parent_category    product_category?  @relation("parent_category", fields: [parent_category_id], references: [id])
  sub_categories     product_category[] @relation("parent_category")
  variations         variation[]
}

model variation {
  id                 String             @id @default(uuid())
  name               String
  product_category   product_category   @relation(fields: [product_categoryId], references: [id])
  product_categoryId String
  variation_options  variation_option[]
}

model variation_option {
  id                    String                  @id @default(uuid())
  variation             variation               @relation(fields: [variation_id], references: [id])
  variation_id          String
  value                 String
  product_configuration product_configuration[]
}

model product_configuration {
  product             product_item     @relation(fields: [product_item_id], references: [id])
  product_item_id     String
  variation_option    variation_option @relation(fields: [variation_option_id], references: [id])
  variation_option_id String

  @@id(fields: [product_item_id, variation_option_id], name: "id")
}

model shopping_cart {
  id                 String               @id @default(uuid())
  user               site_user            @relation(fields: [user_id], references: [id])
  user_id            String
  shopping_cart_item shopping_cart_item[]
}

model shopping_cart_item {
  id              String        @id @default(uuid())
  cart            shopping_cart @relation(fields: [cart_id], references: [id])
  cart_id         String
  product_item    product_item  @relation(fields: [product_item_id], references: [id])
  product_item_id String
  qty             Int
}

model shop_order {
  id                  String              @id @default(uuid())
  user                site_user           @relation(fields: [user_id], references: [id])
  user_id             String
  order_date          DateTime            @default(now())
  payment_method      user_payment_method @relation(fields: [payment_method_id], references: [id])
  payment_method_id   String
  shipping_address    address             @relation(fields: [shipping_address_id], references: [id])
  shipping_address_id String
  shipping_method     shipping_method     @relation(fields: [shipping_method_id], references: [id])
  shipping_method_id  String
  order_total         Int
  order_status        order_status
  order_line          order_line[]
}

enum order_status {
  DRAFT
  PROCESSING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
  RETURNED
  REFUNDED
}

model shipping_method {
  id         String       @id @default(uuid())
  name       String
  price      Int
  shop_order shop_order[]
}

model order_line {
  id              String        @id @default(uuid())
  product_item    product_item  @relation(fields: [product_item_id], references: [id])
  product_item_id String
  order           shop_order    @relation(fields: [order_id], references: [id])
  order_id        String
  qty             Int
  price           Int
  user_review     user_review[]
}

model user_review {
  id           String       @id @default(uuid())
  user         site_user    @relation(fields: [user_id], references: [id])
  user_id      String
  order        order_line   @relation(fields: [order_id], references: [id])
  order_id     String
  rating_value rating_value
  review_text  String
}

enum rating_value {
  ONE
  TWO
  THREE
  FOUR
  FIVE
}

model promotion {
  id                String              @id @default(uuid())
  name              String
  description       String
  discount_rate     Int
  start_date        DateTime
  end_date          DateTime
  promotion_product promotion_product[]
}

model promotion_product {
  id           String    @id @default(uuid())
  promotion    promotion @relation(fields: [promotion_id], references: [id])
  promotion_id String
  product      product   @relation(fields: [product_id], references: [id])
  product_id   String
}
